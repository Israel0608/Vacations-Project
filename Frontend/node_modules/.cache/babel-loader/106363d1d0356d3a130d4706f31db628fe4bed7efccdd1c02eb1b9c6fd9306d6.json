{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { VacationsActionTypes, vacationsStore } from \"../Redux/VacationState\";\nimport notificationService from \"./NotificationService\";\nimport StatusCode from \"../Models/status-codes\";\nclass DataService {\n  async getAllVacationsByUser(userId) {\n    let vacations = vacationsStore.getState().vacation;\n    if (vacations.length === 0) {\n      const response = await axios.get(appConfig.vacationsUrl + userId);\n      vacations = response.data;\n    }\n    const action = {\n      type: VacationsActionTypes.SetVacations,\n      payload: vacations\n    };\n    vacationsStore.dispatch(action);\n    return vacations;\n  }\n  async getVacationById(vacationId) {\n    const response = await axios.get(appConfig.vacationByIdUrl + vacationId);\n    const vacation = response.data;\n    return vacation;\n  }\n  async addVacation(vacation) {\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const response = await axios.post(appConfig.addVacationUrl, vacation, options);\n    const addedVacation = response.data;\n    const action = {\n      type: VacationsActionTypes.Addvacation,\n      payload: addedVacation\n    };\n    vacationsStore.dispatch(action);\n    return addedVacation;\n  }\n  async deleteVacation(vacationId) {\n    await axios.delete(appConfig.deleteVacationUrl + vacationId);\n    const action = {\n      type: VacationsActionTypes.Deletevacation,\n      payload: vacationId\n    };\n    vacationsStore.dispatch(action);\n  }\n  async updateVacation(vacation) {\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const response = await axios.put(appConfig.updateUrl + vacation.vacationId, vacation, options);\n    const updatedVacation = response.data;\n    const action = {\n      type: VacationsActionTypes.Updatevacation,\n      payload: updatedVacation\n    };\n    vacationsStore.dispatch(action);\n    return updatedVacation;\n  }\n  async getAllFollowers() {\n    const response = await axios.get(appConfig.followersUrl);\n    const followers = response.data;\n    return followers;\n  }\n  async followe(userId, vacationId) {\n    try {\n      const response = await axios.post(appConfig.followersUrl + userId + \"/\" + vacationId);\n      if (response.status === StatusCode.Created) {\n        const action = {\n          type: VacationsActionTypes.followe,\n          payload: vacationId\n        };\n        vacationsStore.dispatch(action);\n      }\n    } catch (err) {\n      notificationService.error(err);\n    }\n  }\n  async unFollowe(userId, vacationId) {\n    try {\n      const response = await axios.delete(appConfig.followersUrl + userId + \"/\" + vacationId);\n      if (response.status === StatusCode.Created) {\n        const action = {\n          type: VacationsActionTypes.unFollowe,\n          payload: vacationId\n        };\n        vacationsStore.dispatch(action);\n      }\n    } catch (err) {\n      notificationService.error(err);\n    }\n  }\n}\nconst dataService = new DataService();\nexport default dataService;","map":{"version":3,"names":["axios","appConfig","VacationsActionTypes","vacationsStore","notificationService","StatusCode","DataService","getAllVacationsByUser","userId","vacations","getState","vacation","length","response","get","vacationsUrl","data","action","type","SetVacations","payload","dispatch","getVacationById","vacationId","vacationByIdUrl","addVacation","options","headers","post","addVacationUrl","addedVacation","Addvacation","deleteVacation","delete","deleteVacationUrl","Deletevacation","updateVacation","put","updateUrl","updatedVacation","Updatevacation","getAllFollowers","followersUrl","followers","followe","status","Created","err","error","unFollowe","dataService"],"sources":["/Users/ysrlswpr/Desktop/Israel Sofer Project/Frontend/src/Services/DataService.ts"],"sourcesContent":["import axios, { HttpStatusCode } from \"axios\";\r\nimport VacationsModel from \"../Models/vacations-model\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport FollowersModel from \"../Models/follwers-model\";\r\nimport { VacationsActionTypes, vacationsAction, vacationsStore } from \"../Redux/VacationState\";\r\nimport notificationService from \"./NotificationService\";\r\nimport StatusCode from \"../Models/status-codes\";\r\n\r\nclass DataService {\r\n\r\n    public async getAllVacationsByUser(userId: number): Promise<VacationsModel[]> {\r\n        let vacations = vacationsStore.getState().vacation\r\n        if (vacations.length === 0) {\r\n            const response = await axios.get<VacationsModel[]>(appConfig.vacationsUrl + userId);\r\n            vacations = response.data;\r\n        }\r\n        const action: vacationsAction = { type: VacationsActionTypes.SetVacations, payload: vacations };\r\n        vacationsStore.dispatch(action);\r\n        return vacations;\r\n    }\r\n\r\n    public async getVacationById(vacationId: number): Promise<VacationsModel> {\r\n        const response = await axios.get<VacationsModel>(appConfig.vacationByIdUrl + vacationId);\r\n        const vacation = response.data;\r\n        return vacation;\r\n    }\r\n\r\n    public async addVacation(vacation: VacationsModel): Promise<VacationsModel> {\r\n        const options = {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" }\r\n        }\r\n        const response = await axios.post<VacationsModel>(appConfig.addVacationUrl, vacation, options);\r\n        const addedVacation = response.data;\r\n        const action: vacationsAction = { type: VacationsActionTypes.Addvacation, payload: addedVacation }\r\n        vacationsStore.dispatch(action);\r\n        return addedVacation;\r\n    }\r\n\r\n    public async deleteVacation(vacationId: number): Promise<void> {\r\n        await axios.delete(appConfig.deleteVacationUrl + vacationId)\r\n        const action: vacationsAction = {type: VacationsActionTypes.Deletevacation, payload: vacationId}\r\n        vacationsStore.dispatch(action);\r\n    }\r\n\r\n    public async updateVacation(vacation: VacationsModel): Promise<VacationsModel> {\r\n        const options = {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" }\r\n        }\r\n        const response = await axios.put<VacationsModel>(appConfig.updateUrl + vacation.vacationId, vacation, options);\r\n        const updatedVacation = response.data;\r\n        const action = {type: VacationsActionTypes.Updatevacation, payload: updatedVacation}\r\n        vacationsStore.dispatch(action);\r\n        return updatedVacation\r\n    }\r\n\r\n    public async getAllFollowers(): Promise<FollowersModel[]> {\r\n        const response = await axios.get<FollowersModel[]>(appConfig.followersUrl);\r\n        const followers = response.data;\r\n        return followers;\r\n    }\r\n\r\n    public async followe(userId: string, vacationId: string): Promise<void> {\r\n        try {\r\n            const response = await axios.post(appConfig.followersUrl + userId + \"/\" + vacationId)\r\n            if (response.status === StatusCode.Created) {\r\n                const action: vacationsAction = { type: VacationsActionTypes.followe, payload: vacationId }\r\n                vacationsStore.dispatch(action)\r\n            }\r\n        } catch (err: any) {\r\n            notificationService.error(err)\r\n        }\r\n    }\r\n\r\n\r\n    public async unFollowe(userId: string, vacationId: string): Promise<void> {\r\n        try {\r\n            const response = await axios.delete(appConfig.followersUrl + userId + \"/\" + vacationId)\r\n            if (response.status === StatusCode.Created) {\r\n                const action: vacationsAction = { type: VacationsActionTypes.unFollowe, payload: vacationId }\r\n                vacationsStore.dispatch(action)\r\n            }\r\n        } catch (err: any) {\r\n            notificationService.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst dataService = new DataService();\r\n\r\nexport default dataService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}