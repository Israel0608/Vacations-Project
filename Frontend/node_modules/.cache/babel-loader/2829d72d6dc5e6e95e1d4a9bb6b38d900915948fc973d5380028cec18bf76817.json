{"ast":null,"code":"import { Notyf } from \"notyf\";\nclass NotificationService {\n  constructor() {\n    this.notification = new Notyf({\n      duration: 4000,\n      position: {\n        x: 'center',\n        y: 'top'\n      }\n    });\n  }\n  success(message) {\n    this.notification.success(message);\n  }\n  error(err) {\n    const message = this.extractErrorMessage(err);\n    this.notification.error(message);\n  }\n  extractErrorMessage(err) {\n    var _err$response, _err$response2, _err$response3, _err$response4;\n    if (typeof err === \"string\") return err;\n    if (typeof ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) === \"string\") return (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data; // axios\n\n    if (Array.isArray((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data)) return (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data[0]; // axios\n\n    if (typeof err.message === \"string\") return err.message;\n    return \"Unknown error\";\n  }\n}\nconst notificationService = new NotificationService();\nexport default notificationService;","map":{"version":3,"names":["Notyf","NotificationService","constructor","notification","duration","position","x","y","success","message","error","err","extractErrorMessage","_err$response","_err$response2","_err$response3","_err$response4","response","data","Array","isArray","notificationService"],"sources":["/Users/ysrlswpr/Desktop/Israel Sofer Project/Frontend/src/Services/NotificationService.ts"],"sourcesContent":["import { Notyf } from \"notyf\";\r\n\r\nclass NotificationService {\r\n    private notification = new Notyf({\r\n        duration: 4000,\r\n        position: { x: 'center', y: 'top' }\r\n    });\r\n\r\n    public success(message: string): void {\r\n        this.notification.success(message);\r\n    }\r\n    \r\n    public error(err: string): void {\r\n        const message = this.extractErrorMessage(err);\r\n        this.notification.error(message);\r\n    }\r\n\r\n    private extractErrorMessage(err: any): string {\r\n\r\n        if (typeof err === \"string\") return err;\r\n\r\n        if (typeof err.response?.data === \"string\") return err.response?.data; // axios\r\n\r\n        if (Array.isArray(err.response?.data)) return err.response?.data[0]; // axios\r\n\r\n        if (typeof err.message === \"string\") return err.message;\r\n\r\n        return \"Unknown error\";\r\n    }\r\n\r\n}\r\n\r\nconst notificationService = new NotificationService();\r\n\r\nexport default notificationService;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAE7B,MAAMC,mBAAmB,CAAC;EAAAC,YAAA;IAAA,KACdC,YAAY,GAAG,IAAIH,KAAK,CAAC;MAC7BI,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;QAAEC,CAAC,EAAE,QAAQ;QAAEC,CAAC,EAAE;MAAM;IACtC,CAAC,CAAC;EAAA;EAEKC,OAAOA,CAACC,OAAe,EAAQ;IAClC,IAAI,CAACN,YAAY,CAACK,OAAO,CAACC,OAAO,CAAC;EACtC;EAEOC,KAAKA,CAACC,GAAW,EAAQ;IAC5B,MAAMF,OAAO,GAAG,IAAI,CAACG,mBAAmB,CAACD,GAAG,CAAC;IAC7C,IAAI,CAACR,YAAY,CAACO,KAAK,CAACD,OAAO,CAAC;EACpC;EAEQG,mBAAmBA,CAACD,GAAQ,EAAU;IAAA,IAAAE,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,cAAA;IAE1C,IAAI,OAAOL,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAEvC,IAAI,SAAAE,aAAA,GAAOF,GAAG,CAACM,QAAQ,cAAAJ,aAAA,uBAAZA,aAAA,CAAcK,IAAI,MAAK,QAAQ,EAAE,QAAAJ,cAAA,GAAOH,GAAG,CAACM,QAAQ,cAAAH,cAAA,uBAAZA,cAAA,CAAcI,IAAI,CAAC,CAAC;;IAEvE,IAAIC,KAAK,CAACC,OAAO,EAAAL,cAAA,GAACJ,GAAG,CAACM,QAAQ,cAAAF,cAAA,uBAAZA,cAAA,CAAcG,IAAI,CAAC,EAAE,QAAAF,cAAA,GAAOL,GAAG,CAACM,QAAQ,cAAAD,cAAA,uBAAZA,cAAA,CAAcE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IAErE,IAAI,OAAOP,GAAG,CAACF,OAAO,KAAK,QAAQ,EAAE,OAAOE,GAAG,CAACF,OAAO;IAEvD,OAAO,eAAe;EAC1B;AAEJ;AAEA,MAAMY,mBAAmB,GAAG,IAAIpB,mBAAmB,CAAC,CAAC;AAErD,eAAeoB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}