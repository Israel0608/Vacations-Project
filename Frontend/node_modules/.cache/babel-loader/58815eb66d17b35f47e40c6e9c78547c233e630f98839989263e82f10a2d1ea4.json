{"ast":null,"code":"var _jsxFileName = \"/Users/ysrlswpr/Desktop/Israel Sofer Project/Frontend/src/Components/DataArea/CheckBoxDate/CheckBoxDate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./CheckBoxDate.css\";\nimport { authStore } from '../../../Redux/AuthState';\nimport dataService from '../../../Services/DataService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckBoxDate({\n  vacations,\n  setFilteredVacations\n}) {\n  _s();\n  const [showNotStartedOnly, setShowNotStartedOnly] = useState(false);\n  const [showActiveOnly, setShowActiveOnly] = useState(false);\n  useEffect(() => {\n    handleFilterChange();\n  }, [showNotStartedOnly, showActiveOnly]);\n  async function handleFilterChange() {\n    let filteredVacations = vacations;\n    if (showNotStartedOnly === true) {\n      filteredVacations = filteredVacations.filter(vacation => new Date(vacation.checkIn).getTime() > new Date().getTime());\n    } else if (!showNotStartedOnly === true) {\n      var _authStore$getState$u;\n      const userId = (_authStore$getState$u = authStore.getState().user) === null || _authStore$getState$u === void 0 ? void 0 : _authStore$getState$u.userId;\n      const vacationsByUser = await dataService.getAllVacationsByUser(userId);\n      setFilteredVacations(vacationsByUser);\n    }\n    if (showActiveOnly === true) {\n      filteredVacations = filteredVacations.filter(vacation => {\n        const checkInTime = new Date(vacation.checkIn).getTime();\n        const checkOutTime = new Date(vacation.checkOut).getTime();\n        const currentTime = new Date().getTime();\n        return checkInTime <= currentTime && checkOutTime >= currentTime;\n      });\n    }\n    setFilteredVacations(filteredVacations);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkboxDate\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Show Vacations Not Started Yet\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => setShowNotStartedOnly(!showNotStartedOnly),\n        checked: showNotStartedOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Show Active Vacations\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => setShowActiveOnly(!showActiveOnly),\n        checked: showActiveOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(CheckBoxDate, \"nbhhMu0gbsoeK+ZzAR80r4ihVBU=\");\n_c = CheckBoxDate;\nexport default CheckBoxDate;\nvar _c;\n$RefreshReg$(_c, \"CheckBoxDate\");","map":{"version":3,"names":["React","useEffect","useState","authStore","dataService","jsxDEV","_jsxDEV","CheckBoxDate","vacations","setFilteredVacations","_s","showNotStartedOnly","setShowNotStartedOnly","showActiveOnly","setShowActiveOnly","handleFilterChange","filteredVacations","filter","vacation","Date","checkIn","getTime","_authStore$getState$u","userId","getState","user","vacationsByUser","getAllVacationsByUser","checkInTime","checkOutTime","checkOut","currentTime","className","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ysrlswpr/Desktop/Israel Sofer Project/Frontend/src/Components/DataArea/CheckBoxDate/CheckBoxDate.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./CheckBoxDate.css\";\nimport VacationsModel from '../../../Models/vacations-model';\nimport { authStore } from '../../../Redux/AuthState';\nimport dataService from '../../../Services/DataService';\n\ninterface CheckBoxDateProps {\n    vacations: VacationsModel[];\n    setFilteredVacations: React.Dispatch<React.SetStateAction<VacationsModel[]>>;\n}\n\nfunction CheckBoxDate({ vacations, setFilteredVacations }: CheckBoxDateProps): JSX.Element {\n    const [showNotStartedOnly, setShowNotStartedOnly] = useState(false);\n    const [showActiveOnly, setShowActiveOnly] = useState(false);\n\n    useEffect(() => {\n        handleFilterChange();\n    }, [showNotStartedOnly, showActiveOnly]);\n\n    async function handleFilterChange() {\n        let filteredVacations = vacations;\n\n        if (showNotStartedOnly === true) {\n            filteredVacations = filteredVacations.filter(vacation => new Date(vacation.checkIn).getTime() > new Date().getTime());\n        } else if (!showNotStartedOnly === true) {\n            const userId = authStore.getState().user?.userId;\n            const vacationsByUser = await dataService.getAllVacationsByUser(userId);\n            setFilteredVacations(vacationsByUser);\n        }\n\n        if (showActiveOnly === true) {\n            filteredVacations = filteredVacations.filter(vacation => {\n                const checkInTime = new Date(vacation.checkIn).getTime();\n                const checkOutTime = new Date(vacation.checkOut).getTime();\n                const currentTime = new Date().getTime();\n                return checkInTime <= currentTime && checkOutTime >= currentTime;\n            });\n        }\n        setFilteredVacations(filteredVacations);\n    };\n\n    return (\n        <div className=\"checkboxDate\">\n            <label>\n                Show Vacations Not Started Yet\n                <input\n                    type=\"checkbox\"\n                    onChange={() => setShowNotStartedOnly(!showNotStartedOnly)}\n                    checked={showNotStartedOnly}\n                />\n            </label>\n            <label>\n                Show Active Vacations\n                <input\n                    type=\"checkbox\"\n                    onChange={() => setShowActiveOnly(!showActiveOnly)}\n                    checked={showActiveOnly}\n                />\n            </label>\n        </div>\n    );\n}\n\nexport default CheckBoxDate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}