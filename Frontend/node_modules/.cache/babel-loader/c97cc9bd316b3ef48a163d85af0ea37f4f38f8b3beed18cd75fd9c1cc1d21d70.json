{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { AuthActionTypes, authStore } from \"../Redux/AuthState\";\nclass AuthService {\n  async register(user) {\n    const response = await axios.post(appConfig.registerUrl, user);\n    const token = response.data;\n    const action = {\n      type: AuthActionTypes.Register,\n      payload: token\n    };\n    authStore.dispatch(action);\n  }\n  async login(credentials) {\n    const response = await axios.post(appConfig.loginUrl, credentials);\n    const token = response.data;\n    const action = {\n      type: AuthActionTypes.Login,\n      payload: token\n    };\n    authStore.dispatch(action);\n  }\n  logout() {\n    const action = {\n      type: AuthActionTypes.Logout\n    };\n    authStore.dispatch(action);\n  }\n}\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["axios","appConfig","AuthActionTypes","authStore","AuthService","register","user","response","post","registerUrl","token","data","action","type","Register","payload","dispatch","login","credentials","loginUrl","Login","logout","Logout","authService"],"sources":["/Users/ysrlswpr/Desktop/Israel Sofer Project/Frontend/src/Services/authService.ts"],"sourcesContent":["import axios from \"axios\";\nimport UsersModel from \"../Models/users-model\";\nimport appConfig from \"../Utils/AppConfig\";\nimport CredentialsModel from \"../Models/CredentialsModel\";\nimport { AuthAction, AuthActionTypes, authStore } from \"../Redux/AuthState\";\n\nclass AuthService {\n\n    public async register(user: UsersModel): Promise<void> {\n        const response = await axios.post(appConfig.registerUrl, user);\n        const token = response.data;\n        const action: AuthAction = { type: AuthActionTypes.Register, payload: token }\n        authStore.dispatch(action);\n    }\n\n\n    public async login(credentials: CredentialsModel): Promise<void> {\n        const response = await axios.post(appConfig.loginUrl, credentials);\n        const token = response.data;\n        const action: AuthAction = { type: AuthActionTypes.Login, payload: token }\n        authStore.dispatch(action);\n\n    }\n\n    public logout(): void {\n        const action: AuthAction = { type: AuthActionTypes.Logout };\n        authStore.dispatch(action);\n    }\n\n}\n\nconst authService = new AuthService();\n\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SAAqBC,eAAe,EAAEC,SAAS,QAAQ,oBAAoB;AAE3E,MAAMC,WAAW,CAAC;EAEd,MAAaC,QAAQA,CAACC,IAAgB,EAAiB;IACnD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAACP,SAAS,CAACQ,WAAW,EAAEH,IAAI,CAAC;IAC9D,MAAMI,KAAK,GAAGH,QAAQ,CAACI,IAAI;IAC3B,MAAMC,MAAkB,GAAG;MAAEC,IAAI,EAAEX,eAAe,CAACY,QAAQ;MAAEC,OAAO,EAAEL;IAAM,CAAC;IAC7EP,SAAS,CAACa,QAAQ,CAACJ,MAAM,CAAC;EAC9B;EAGA,MAAaK,KAAKA,CAACC,WAA6B,EAAiB;IAC7D,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAACP,SAAS,CAACkB,QAAQ,EAAED,WAAW,CAAC;IAClE,MAAMR,KAAK,GAAGH,QAAQ,CAACI,IAAI;IAC3B,MAAMC,MAAkB,GAAG;MAAEC,IAAI,EAAEX,eAAe,CAACkB,KAAK;MAAEL,OAAO,EAAEL;IAAM,CAAC;IAC1EP,SAAS,CAACa,QAAQ,CAACJ,MAAM,CAAC;EAE9B;EAEOS,MAAMA,CAAA,EAAS;IAClB,MAAMT,MAAkB,GAAG;MAAEC,IAAI,EAAEX,eAAe,CAACoB;IAAO,CAAC;IAC3DnB,SAAS,CAACa,QAAQ,CAACJ,MAAM,CAAC;EAC9B;AAEJ;AAEA,MAAMW,WAAW,GAAG,IAAInB,WAAW,CAAC,CAAC;AAErC,eAAemB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}