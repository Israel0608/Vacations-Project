{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nimport { createStore } from \"redux\";\nexport class AuthState {\n  constructor() {\n    this.user = null;\n    this.token = null;\n    this.token = sessionStorage.getItem('token');\n    if (this.token) {\n      this.user = jwtDecode(this.token).user;\n    }\n  }\n}\nexport let AuthActionTypes = /*#__PURE__*/function (AuthActionTypes) {\n  AuthActionTypes[\"Register\"] = \"Register\";\n  AuthActionTypes[\"Login\"] = \"Login\";\n  AuthActionTypes[\"Logout\"] = \"Logout\";\n  return AuthActionTypes;\n}({});\nfunction authReducer(currentState = new AuthState(), action) {\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case AuthActionTypes.Register:\n    case AuthActionTypes.Login:\n      newState.user = jwtDecode(action.payload).user;\n      newState.token = action.payload;\n      sessionStorage.setItem(`token`, newState.token);\n      break;\n    case AuthActionTypes.Logout:\n      newState.user = null;\n      newState.token = null;\n      sessionStorage.removeItem('token');\n      break;\n  }\n  return newState;\n}\n\n// 5. create store\nexport const authStore = createStore(authReducer);","map":{"version":3,"names":["jwtDecode","createStore","AuthState","constructor","user","token","sessionStorage","getItem","AuthActionTypes","authReducer","currentState","action","newState","type","Register","Login","payload","setItem","Logout","removeItem","authStore"],"sources":["/Users/ysrlswpr/Desktop/Israel Sofer Project/Frontend/src/Redux/AuthState.ts"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\r\nimport { createStore } from \"redux\";\r\nimport UsersModel from \"../Models/users-model\";\r\n\r\nexport class AuthState {\r\n    public user: UsersModel = null;\r\n    public token: string = null;\r\n\r\n    constructor() {\r\n        this.token = sessionStorage.getItem('token');\r\n        if (this.token) {\r\n            this.user = jwtDecode<{ user: UsersModel }>(this.token).user;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport enum AuthActionTypes {\r\n    Register = \"Register\",\r\n    Login = \"Login\",\r\n    Logout = \"Logout\",\r\n}\r\n\r\n\r\nexport interface AuthAction {\r\n    type: AuthActionTypes,\r\n    payload?: any \r\n}\r\n\r\n\r\nfunction authReducer(currentState = new AuthState(), action: AuthAction): AuthState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case AuthActionTypes.Register:\r\n        case AuthActionTypes.Login:\r\n        \r\n            newState.user = jwtDecode<{ user: UsersModel }>(action.payload).user;\r\n            newState.token = action.payload;\r\n            sessionStorage.setItem(`token`, newState.token);\r\n            \r\n            break;\r\n        case AuthActionTypes.Logout:\r\n            newState.user = null;\r\n            newState.token = null;\r\n            sessionStorage.removeItem('token');\r\n            break;\r\n    }\r\n\r\n    return newState\r\n\r\n}\r\n\r\n// 5. create store\r\nexport const authStore = createStore(authReducer);"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,OAAO;AAGnC,OAAO,MAAMC,SAAS,CAAC;EAInBC,WAAWA,CAAA,EAAG;IAAA,KAHPC,IAAI,GAAe,IAAI;IAAA,KACvBC,KAAK,GAAW,IAAI;IAGvB,IAAI,CAACA,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,IAAI,IAAI,CAACF,KAAK,EAAE;MACZ,IAAI,CAACD,IAAI,GAAGJ,SAAS,CAAuB,IAAI,CAACK,KAAK,CAAC,CAACD,IAAI;IAChE;EACJ;AACJ;AAIA,WAAYI,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAa3B,SAASC,WAAWA,CAACC,YAAY,GAAG,IAAIR,SAAS,CAAC,CAAC,EAAES,MAAkB,EAAa;EAChF,MAAMC,QAAQ,GAAG;IAAE,GAAGF;EAAa,CAAC;EAEpC,QAAQC,MAAM,CAACE,IAAI;IACf,KAAKL,eAAe,CAACM,QAAQ;IAC7B,KAAKN,eAAe,CAACO,KAAK;MAEtBH,QAAQ,CAACR,IAAI,GAAGJ,SAAS,CAAuBW,MAAM,CAACK,OAAO,CAAC,CAACZ,IAAI;MACpEQ,QAAQ,CAACP,KAAK,GAAGM,MAAM,CAACK,OAAO;MAC/BV,cAAc,CAACW,OAAO,CAAE,OAAM,EAAEL,QAAQ,CAACP,KAAK,CAAC;MAE/C;IACJ,KAAKG,eAAe,CAACU,MAAM;MACvBN,QAAQ,CAACR,IAAI,GAAG,IAAI;MACpBQ,QAAQ,CAACP,KAAK,GAAG,IAAI;MACrBC,cAAc,CAACa,UAAU,CAAC,OAAO,CAAC;MAClC;EACR;EAEA,OAAOP,QAAQ;AAEnB;;AAEA;AACA,OAAO,MAAMQ,SAAS,GAAGnB,WAAW,CAACQ,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}